Started this on 11-18-22

currently am working on the input randomization.
it is not working correctly. My hunch is that it switches what key is at what input before the next update call
so maybe it is calling move on the same one multiple times because it thinks you just pressed two keys very fast.

I made the update check to make sure all keys were released before checking for input again.
that didnt seem to do anything so that must not be the issue.

I fixed the issue of multiple calls, but it seems the arrows are still off.
I made a bool that if true shuffles at the end of update instead of calling the shuffle function as the key
is pressed. I could have done states but I felt this was pretty simple.

Im very happy I fixed it. such a simple fix. Deffinitly saw a great example of why its 
important to do a state pattern instead of calling things directly though.

Now the arrow indicators are off sometimes

I have a list of arrows
I need to see which input index corresponds with which arrow

loop through the inputkets array. The right key will always be at index 0. 
The order of indicies array determines which side the arrow should be on.
if the first number in the indicies array is 2, the up arrow should be on the right side.

whatever indicies is at 0 will always be right


I have an array of randomized numbers 1-3.
I use these numbers as indicies to access an array of key inputs, in order to randomize which keys goes which direction
I want to use the array of randomized numbers similarily to access an array of arrow sprites
The arrow sprites should be located on the corresponding side of the player sprite that
the keys in the key array move the player to when accessed from the randomized numbers array.

loop through arrows
arrow at 0 index should be equal to the direction key accessed by the 0 element of randomized number array